
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.2 (Phaser v2.6.2)


/**
 * breakWallGame3.
 */
function breakWallGame3() {
	
	Phaser.State.call(this);
	
}

/** @type Phaser.State */
var breakWallGame3_proto = Object.create(Phaser.State.prototype);
breakWallGame3.prototype = breakWallGame3_proto;
breakWallGame3.prototype.constructor = breakWallGame3;

breakWallGame3.prototype.init = function () {
	
};

breakWallGame3.prototype.preload = function () {
	
	this.load.pack('game', 'assets/pack.json');
	this.load.pack('maze', 'assets/pack.json');
	playerInput = this.add.group();
	weaknessGroup = game.add.group();
	hideGrid(true);
	toolbox = '<xml id="toolbox" style="display: none">';
	toolbox += '  <block type="input"></block>';
	toolbox += '</xml>';
	changeToolbox(toolbox,20);
	
};

breakWallGame3.prototype.create = function () {
	
	this.playerInputMask = game.add.graphics();
	this.playerInputMask.inputEnabled=true;
	this.playerInputMask.beginFill(0x7FFF00);
	this.playerInputMask.drawRect( 0,400,1000, 400 );
	this.playerInputMask.endFill();
	this.WeaknessOutputMask = game.add.graphics();
	this.WeaknessOutputMask.inputEnabled=true;
	this.WeaknessOutputMask.beginFill(0x98F5FF);
	this.WeaknessOutputMask.drawRect(0,0,1000, 400);
	this.WeaknessOutputMask.endFill();
	addweaknessGroup(randonWeakness(3));
	
	
};

/* --- end generated code --- */
breakWallGame.prototype.update = function () {
	if (correct){
		alert('true');
		correct=false;
	}

};
breakWallGame.prototype.render = function () {
	this.game.debug.inputInfo(32, 32);
};


// -- user code here --
